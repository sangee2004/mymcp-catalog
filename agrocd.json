{
  "name": "Argo CD",
  "description": "# Argo CD MCP Server\n\nAn implementation of [Model Context Protocol (MCP)](https://modelcontextprotocol.io) server for [Argo CD](https://argo-cd.readthedocs.io/en/stable/), enabling AI assistants to interact with your Argo CD applications through natural language. This server allows for seamless integration with Visual Studio Code and other MCP clients through stdio and HTTP stream transport protocols.\n\n<a href=\"https://glama.ai/mcp/servers/@akuity/argocd-mcp\">\n  <img width=\"380\" height=\"200\" src=\"https://glama.ai/mcp/servers/@akuity/argocd-mcp/badge\" alt=\"argocd-mcp MCP server\" />\n</a>\n\n<!--\n// Generate using?:\nconst config = JSON.stringify({\n  \"name\": \"argocd-mcp\",\n  \"command\": \"npx\",\n  \"args\": [\"argocd-mcp@latest\", \"stdio\"],\n  \"env\": {\n    \"ARGOCD_BASE_URL\": \"<argocd_url>\",\n    \"ARGOCD_API_TOKEN\": \"<argocd_token>\"\n  }\n});\nconst urlForWebsites = `vscode:mcp/install?${encodeURIComponent(config)}`;\n// Github markdown does not allow linking to `vscode:` directly, so you can use our redirect:\nconst urlForGithub = `https://insiders.vscode.dev/redirect?url=${encodeURIComponent(urlForWebsites)}`;\n-->\n\n[<img src=\"https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&label=Install%20Server&color=0098FF\" alt=\"Install in VS Code\">](https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522argocd-mcp%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522argocd-mcp%2540latest%2522%252C%2522stdio%2522%255D%252C%2522env%2522%253A%257B%2522ARGOCD_BASE_URL%2522%253A%2522%253Cargocd_url%253E%2522%252C%2522ARGOCD_API_TOKEN%2522%253A%2522%253Cargocd_token%253E%2522%257D%257D)  [<img alt=\"Install in VS Code Insiders\" src=\"https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&label=Install%20Server&color=24bfa5\">](https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522argocd-mcp%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522argocd-mcp%2540latest%2522%252C%2522stdio%2522%255D%252C%2522env%2522%253A%257B%2522ARGOCD_BASE_URL%2522%253A%2522%253Cargocd_url%253E%2522%252C%2522ARGOCD_API_TOKEN%2522%253A%2522%253Cargocd_token%253E%2522%257D%257D)\n\nThis project is maintained by [Akuity](https://akuity.io/), the creators of Argo Project.\n\n<img align=\"center\" src=\"https://raw.githubusercontent.com/akuity/argocd-mcp/main/images/akuity.png\" alt=\"akuity\" width=\"50%\" height=\"50%\">\n\nAkuity is the enterprise company for Argo and Kargo, and provides the essential platform for end-to-end GitOps for Kubernetes. With the Akuity Platform, enterprises can deploy with managed Argo CD, promote seamlessly with Kargo, and gain real-time visibility into their infrastructure using Akuity Monitoring. Akuity was founded by Argo creators Hong Wang, Jesse Suen, and Alexander Matyushentsev, with a mission to empower both Platform and Application teams with the best tools for GitOps at enterprise scale.\n\n---\n![argocd-mcp-demo](https://github.com/user-attachments/assets/091548d0-9927-4d4b-a2fe-4f99c7cea108)\n\n## Features\n\n- **Transport Protocols**: Supports both stdio and HTTP stream transport modes for flexible integration with different clients\n- **Complete Argo CD API Integration**: Provides comprehensive access to Argo CD resources and operations\n- **AI Assistant Ready**: Pre-configured tools for AI assistants to interact with Argo CD in natural language\n\n## Installation\n\n### Prerequisites\n\n- Node.js (v18 or higher recommended)\n- pnpm package manager (for development)\n- Argo CD instance with API access\n- Argo CD API token (see the [docs for instructions](https://argo-cd.readthedocs.io/en/stable/developer-guide/api-docs/#authorization)) \n\n"
  "metadata": {
    "categories": "Developer Tools,Infrastructure & DevOps,Verified"
  },
  "icon": "https://avatars.githubusercontent.com/u/84434210?v=4",
  "repoURL": "https://github.com/akuity/argocd-mcp",
  "env": [
    {
      "key": "ARGOCD_BASE_URL",
      "name": "ArgoCD Base URL",
      "required": true,
      "sensitive": false,
      "description": "Base URL of your Argo CD instance (e.g., https://argocd.example.com)."
    },
    {
      "key": "ARGOCD_API_TOKEN",
      "name": "ArgoCD API Token",
      "required": true,
      "sensitive": true,
      "description": "API token with access permissions for the Argo CD instance."
    }
  ],
  "args": [
    "argocd-mcp@latest",
    "stdio"
  ],
  "command": "npx"
}
