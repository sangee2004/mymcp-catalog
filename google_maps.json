{
  "name": "Google Maps",
  "description": "# Google Maps MCP Server\n\nMCP Server for the Google Maps API.\n\n## Tools\n\n1. `maps_geocode`\n\n   - Convert address to coordinates\n   - Input: `address` (string)\n   - Returns: location, formatted_address, place_id\n\n2. `maps_reverse_geocode`\n\n   - Convert coordinates to address\n   - Inputs:\n     - `latitude` (number)\n     - `longitude` (number)\n   - Returns: formatted_address, place_id, address_components\n\n3. `maps_search_places`\n\n   - Search for places using text query\n   - Inputs:\n     - `query` (string)\n     - `location` (optional): { latitude: number, longitude: number }\n     - `radius` (optional): number (meters, max 50000)\n   - Returns: array of places with names, addresses, locations\n\n4. `maps_place_details`\n\n   - Get detailed information about a place\n   - Input: `place_id` (string)\n   - Returns: name, address, contact info, ratings, reviews, opening hours\n\n5. `maps_distance_matrix`\n\n   - Calculate distances and times between points\n   - Inputs:\n     - `origins` (string[])\n     - `destinations` (string[])\n     - `mode` (optional): \"driving\" | \"walking\" | \"bicycling\" | \"transit\"\n   - Returns: distances and durations matrix\n\n6. `maps_elevation`\n\n   - Get elevation data for locations\n   - Input: `locations` (array of {latitude, longitude})\n   - Returns: elevation data for each point\n\n7. `maps_directions`\n   - Get directions between points\n   - Inputs:\n     - `origin` (string)\n     - `destination` (string)\n     - `mode` (optional): \"driving\" | \"walking\" | \"bicycling\" | \"transit\"\n   - Returns: route details with steps, distance, duration\n\n## Setup\n\n### API Key\n\nGet a Google Maps API key by following the instructions [here](https://developers.google.com/maps/documentation/javascript/get-api-key#create-api-keys).\n\n",
  "metadata": {
    "categories": "Maps & Location,Verified"
  },
  "icon": "https://avatars.githubusercontent.com/u/182288589?v=4",
  "repoURL": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps",
  "env": [
    {
      "key": "GOOGLE_MAPS_API_KEY",
      "name": "Google Maps API Key",
      "required": true,
      "sensitive": true,
      "description": "Your Google Maps Platform API key. Obtain it from the Google Cloud Console as described in the documentation."
    }
  ],
  "args": [
    "-y",
    "@modelcontextprotocol/server-google-maps"
  ],
  "command": "npx"
}
